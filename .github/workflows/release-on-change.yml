name: Release - On Change

on:
  workflow_dispatch:
  push:
    branches: [ main, '+.x', beta, alpha ]

# https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#concurrency
concurrency:
  # Prevent concurrent releases on the same branch to avoid tag conflicts (e.g., "latest" on the main branch).
  # Concurrent releases on different branches are allowed, as their tags don't overlap.
  #
  # Note: GitHub's concurrency model cancels any *pending* job in the same group when a new one is queued.
  # This means that if multiple release requests are made in quick succession on the *same* branch,
  # only the latest one will proceed — which is acceptable, since it includes all previous changes.
  #
  # However, using the same concurrency group across *different* branches could result in a release
  # request for one branch canceling a pending release for another branch — which is *not* acceptable.
  #
  # Therefore, we scope concurrency to both the workflow and the branch.
  group: ${{ github.workflow }}-${{ github.ref }} # e.g. Release-main
  # Never cancel an ongoing release to prevent harmful interruptions
  cancel-in-progress: false

permissions: {}

jobs:
  release-perform:
    name: Release - Perform
    runs-on: ubuntu-24.04
    timeout-minutes: 60

    permissions:
      contents: write # Required to publish a GitHub release
      issues: write # Required to comment on released issues
      pull-requests: write # Required to comment on released pull requests

    steps:
      - name: Harden runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          disable-sudo-and-containers: true
          egress-policy: block
          allowed-endpoints: >
            github.com:443
            *.github.com:443
            *.githubusercontent.com:443
            repo.maven.apache.org:443
            central.sonatype.com:443
            jitpack.io:443
            repo.papermc.io:443
            api.nuget.org:443
            registry.npmjs.org:443

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
          fetch-depth: 0 # Required by semantic-release

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: lts/jod
          cache: npm
          cache-dependency-path: .github/release/package-lock.json

      - name: Install semantic-release
        working-directory: .github/release/
        run: npm clean-install --engine-strict

      - name: Setup Java
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          java-version: 21
          distribution: temurin
          cache: maven
          server-id: central
          server-username: CENTRAL_USERNAME
          server-password: CENTRAL_TOKEN
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
          CENTRAL_USERNAME: ${{ secrets.CENTRAL_USERNAME }}
          CENTRAL_TOKEN: ${{ secrets.CENTRAL_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          MAVEN_ARGS: --batch-mode -Dstyle.color=always
          MAVEN_ROOT_PROJECT_DIR: ${{ github.workspace }}
        working-directory: .github/release/
        run: npx --no-install semantic-release
